import itertools
import random
import sys

# [ ( 0,  2,  6, 19, 20, 21)
# , ( 0,  3,  4, 16, 18, 26)
# , ( 0,  5, 12, 17, 24, 28)
# , ( 0,  7,  8, 10, 23, 29)
# , ( 0,  9, 11, 13, 27, 31)
# , ( 1,  2,  5,  7,  9, 18)
# , ( 1,  4, 21, 23, 24, 27)
# , ( 1,  8, 11, 20, 26, 28)
# , ( 1, 16, 17, 19, 29, 31)
# , ( 2,  4,  8, 12, 30, 31)
# , ( 2, 10, 11, 16, 24, 25)
# , ( 2, 13, 15, 17, 23, 26)
# , ( 3,  7, 15, 20, 24, 31)
# , ( 3,  8,  9, 17, 21, 25)
# , ( 4,  5, 13, 20, 25, 29)
# , ( 4,  6,  7, 11, 14, 17)
# , ( 4,  9, 10, 15, 19, 28)
# , ( 5, 10, 14, 21, 26, 31)
# , ( 6,  9, 24, 26, 29, 30)
# , ( 6, 18, 23, 25, 28, 31)
# , ( 7, 12, 19, 25, 26, 27)
# , ( 7, 13, 16, 21, 28, 30)
# , ( 9, 12, 14, 16, 20, 23)
# , (10, 17, 18, 20, 27, 30)
# , (11, 12, 15, 18, 21, 29)]

# [ ( 0,  3, 14, 18, 22, 27)
# , ( 0,  4,  8, 12, 17, 28)
# , ( 0,  5, 10, 13, 25, 30)
# , ( 0,  7,  9, 21, 26, 29)
# , ( 0, 15, 16, 19, 20, 24)
# , ( 1,  3,  5, 12, 24, 26)
# , ( 1,  4, 13, 14, 20, 21)
# , ( 1,  7,  8, 10, 18, 19)
# , ( 1, 15, 17, 25, 27, 29)
# , ( 2,  3,  4,  9, 10, 15)
# , ( 2,  5,  7, 20, 27, 28)
# , ( 2,  8, 14, 16, 25, 26)
# , ( 2, 12, 13, 19, 22, 29)
# , ( 2, 17, 18, 21, 24, 30)
# , ( 3,  6,  7, 13, 16, 17)
# , ( 3, 11, 19, 21, 25, 28)
# , ( 4,  5, 11, 16, 18, 29)
# , ( 4,  6, 19, 26, 27, 30)
# , ( 4,  7, 22, 23, 24, 25)
# , ( 6,  9, 12, 18, 20, 25)
# , ( 6, 10, 14, 24, 28, 29)
# , ( 7, 11, 12, 14, 15, 30)
# , ( 8,  9, 11, 13, 24, 27)
# , (10, 11, 17, 20, 22, 26)
# , (10, 12, 16, 21, 23, 27)]

# [ ( 0,  1,  9, 11, 13, 26)
# , ( 0,  2,  8, 10, 14, 27)
# , ( 0,  4, 15, 17, 23, 25)
# , ( 0,  5, 18, 22, 24, 28)
# , ( 0,  7, 16, 19, 20, 21)
# , ( 1,  2,  3, 15, 16, 24)
# , ( 1,  4,  5, 12, 21, 27)
# , ( 1,  6, 10, 19, 22, 25)
# , ( 1, 14, 20, 23, 28, 29)
# , ( 2,  4,  6,  7, 26, 28)
# , ( 2,  9, 12, 18, 19, 23)
# , ( 2, 11, 17, 21, 22, 29)
# , ( 3,  4,  8,  9, 20, 22)
# , ( 3,  5,  7, 10, 11, 23)
# , ( 3, 13, 17, 19, 27, 28)
# , ( 3, 14, 18, 21, 25, 26)
# , ( 4, 10, 13, 16, 18, 29)
# , ( 5,  6,  9, 14, 16, 17)
# , ( 5,  8, 15, 19, 26, 29)
# , ( 6,  8, 13, 21, 23, 24)
# , ( 6, 11, 15, 18, 20, 27)
# , ( 7,  9, 24, 25, 27, 29)
# , ( 7, 12, 13, 14, 15, 22)
# , ( 8, 11, 12, 16, 25, 28)
# , (10, 12, 17, 20, 24, 26)]

sides = 6
rng = 29

combs = list(itertools.combinations(xrange(0, rng), sides))

try:
    last = 0
    while True:
        # print 'New cycle'
        random.shuffle(combs)
        # print 'Shuffled'
        found = []
        numbers = {}
        for l in combs:
            s = set(l)
            # if any(len(filter(lambda t: x in t, found + [s])) > 5 for x in l):
            #     continue
            if all(len(s & x) == 1 for x in found):
                found.append(s)
                for x in l:
                    numbers[x] = numbers.get(x, 0) + 1
                # print list(s)
                # print numbers
                if len(found) == 25:
                    print '\n\nDone!', sorted(map(tuple, found))
                    sys.exit(1)
        print len(found),
        if len(found) > last:
            print "\n\n", sorted(map(tuple, found))
            last = len(found)
except KeyboardInterrupt:
    pass
print "\n\n", sorted(map(tuple, found))
